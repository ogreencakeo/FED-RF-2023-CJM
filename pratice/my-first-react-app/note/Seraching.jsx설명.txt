1. 라이브러리 및 스타일 시트 가져오기:
Font Awesome에서 faSearch 아이콘을 가져오고, React 컴포넌트에서 사용하기 위해 FontAwesomeIcon을 가져옵니다.
SchCatList라는 다른 컴포넌트도 가져옵니다.
jQuery, 검색 모듈에 사용되는 CSS 파일 및 React Hooks와 관련된 필요한 라이브러리들을 가져옵니다.

2. 캐릭터 리스트 데이터 정렬:
catListData 배열을 캐릭터 이름 (cname)을 기준으로 오름차순으로 정렬합니다.

3. 컴포넌트 정의:
Searching이라는 함수형 React 컴포넌트를 정의합니다.
컴포넌트 내부에서는 여러 상태 변수들 (kword, cntNum, selData, cnt)과 상태를 업데이트하는 함수들을 선언합니다.

4. 검색어 초기화 및 설정:
최초 실행 시 initFn 함수가 호출되어, 부모 컴포넌트로부터 전달된 검색어 (props.kword)가 변경되면 해당 검색어를 컴포넌트의 상태로 업데이트합니다.

5. 검색어 업데이트 및 리스트 생성:
사용자가 입력한 검색어를 관리하는 kword 상태와 검색 리스트를 관리하는 selData 상태를 업데이트하는 함수들이 정의되어 있습니다.

6. 체크박스 검색 및 리스트 필터링:
chkSearch 함수는 체크박스의 체크 여부에 따라 캐릭터 리스트를 필터링하여 업데이트합니다.

7. 리스트 정렬:
사용자가 선택한 정렬 옵션에 따라 캐릭터 리스트를 정렬하여 업데이트하는 sortList 함수가 정의되어 있습니다.

8. 리액트 JSX 코드:
JSX를 사용하여 검색 모듈의 화면을 구성합니다. 검색어 입력, 체크박스, 결과 리스트, 정렬 옵션 등이 JSX로 정의되어 있습니다.
이 코드는 주로 검색 및 필터링 기능을 갖춘 캐릭터 리스트를 표시하는 React 컴포넌트로 보입니다.


///////순서 
1. 라이브러리 및 스타일 시트 가져오기:
@fortawesome/free-solid-svg-icons에서 faSearch 아이콘과 FontAwesomeIcon 컴포넌트를 가져옵니다.
SchCatList 컴포넌트를 가져옵니다.
jQuery 및 스타일 시트를 가져옵니다.
React Hooks 및 useEffect, useState, useRef를 가져옵니다.
캐릭터 리스트 데이터 (catListData)를 가져옵니다.

2. 캐릭터 리스트 데이터 정렬:
catListData 배열을 캐릭터 이름 (cname)을 기준으로 오름차순으로 정렬합니다.

3.컴포넌트 정의:
Searching 함수형 React 컴포넌트를 정의합니다.
상태 변수들과 상태를 업데이트하는 함수들을 선언합니다.

4. 검색어 초기화 및 설정:
최초 실행 시 initFn 함수가 호출되어, 부모 컴포넌트로부터 전달된 검색어 (props.kword)가 변경되면 해당 검색어를 컴포넌트의 상태로 업데이트합니다.

5. 검색어 업데이트 및 리스트 생성:
사용자가 입력한 검색어를 관리하는 kword 상태와 검색 리스트를 관리하는 selData 상태를 업데이트하는 함수들이 정의되어 있습니다.

6. 체크박스 검색 및 리스트 필터링:
chkSearch 함수는 체크박스의 체크 여부에 따라 캐릭터 리스트를 필터링하여 업데이트합니다.

7. 리스트 정렬:
사용자가 선택한 정렬 옵션에 따라 캐릭터 리스트를 정렬하여 업데이트하는 sortList 함수가 정의되어 있습니다.

8. 리액트 JSX 코드:
JSX를 사용하여 검색 모듈의 화면을 구성합니다. 검색어 입력, 체크박스, 결과 리스트, 정렬 옵션 등이 JSX로 정의되어 있습니다.
이러한 순서로 코드가 구성되어 있습니다. 코드의 흐름을 이해하려면 각 부분이 어떻게 상호작용하는지 주의 깊게 살펴보시기 바랍니다.



