@charset "utf-8";

/* Robot PJ - 애니메이션 CSS */

/****************************************************** 
    [ CSS 애니메이션 ]
    - CSS 속성 변화를 장면으로 구성하여 
    애니메이션을 화면에 연출해주는 속성
    
    [ 애니메이션 키프레임 ]
    - 애니메이션 속성변화를 지정하는 코딩 영역

    [ 2 장면 코딩법 ]
    @keyframes 키프레임명 {
        from{시작CSS}
        to{끝CSS}
    }
    또는

    @keyframes 키프레임명 {
        0%{시작CSS}
        100%{끝CSS}
    }    

    [ 여러장명 코딩법 ]
    @keyframes 키프레임명 {
        0%{시작CSS}
        10%{중간CSS}
        20%{중간CSS}
        ....
        70%{중간CSS}
        90%{중간CSS}
        100%{끝CSS}
    } 

    -> 만약 첫 장면이 이미 CSS에 설정되어 있으면 from 또는 0%를 생략할 수 있다.

    __________________________________________________________________________

    [ 애니메이션 연출 시간 계산법 ]
    - 내가 지정한 %의 장면은 언제 등장하는가?
    전체 시간 (초) * 몇% / 100 = 알고싶은 시간

    예) 60초 * 50% / 100 = 30초

    [ 설정된 키프레임 호출하는 방법 ]
    animation : 이시이지반방마
    (이름 시간 이징 지연 반복 방향 마지막상태)
    
    
    1) 이름(animation-name) : keyframe 이름
    2) 시간(animation-duration) : 애니메이션 동작시간(초단위:s)
    3) 이징(animation-timing-function) : easing 가속도
    4) 지연(animation-delay) : 애니메이션 시작지연시간(초단위:s)
    5) 반복여부(animation-iteration-count) : 애니메이션 반복횟수
        - 기본값 1, 숫자를 쓰면 반복횟수
        - 영원히는 infinite(인피니트)
    6) 방향(animation-direction) : 시작->끝
        - 대체경로 설정하기 : alternate : 시작->끝,끝->시작
        - 대체경로는 반복횟수가 2이상 또는 infinite 이여야함
    7) 마지막상태(animation-fill-mode) : 애니메이션이 끝났을때
        - 처음상태로 돌아가는 것이 기본!
        - 마지막 상태를 유지하고 싶을때 forwards(앞쪽에...즉,애니끝장면)

******************************************************/

/* 로고 이동 키프레임 */
@keyframes logo-ani {
    /* from{} - 첫 상태 이미 설정해서 생략 */
    to{
        top: 50px;
        left: 50px;
        transform: scale(1);
    }
}
/* 로고 이동 호출하기 - 대상.logo */
.logo{
    animation: logo-ani 1s cubic-bezier(0.91, 0.26, 0, 0.82) 3s forwards;
}